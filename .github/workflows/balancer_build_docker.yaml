name: "[Balancer] Publish docker image to Docker Hub"

on: 
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_run:
    workflows: ["[Balancer] API client generation using swagger"]
    types:
      - completed

jobs:

  balancer-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./balancer

    steps:
      - uses: actions/checkout@v3

      - name: Clear previously generated code
        run: |
          rm -rf ../AUTOBUILD-balancer
          rm -rf ../application/balancerApi
          rm -rf ../service/balancer_api
      - name: Download generated code
        uses: actions/download-artifact@v2
        with:
          name: AUTOBUILD-balancer
          path: AUTOBUILD-balancer

      - name: Move generated code to projects
        run: |
          cp -r ../AUTOBUILD-balancer/application2BalancerClient/ ../application/balancerApi
          cp -r ../AUTOBUILD-balancer/service2BalancerClient/balancer_api/ ../service/balancer_api
          cd ../application
          git apply ./.swagger-codegen-config/balancerApi.patch
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
            commit_message: 'Generate balancer client using swagger-codegen'
            file_pattern: application/balancerApi service/balancer_api

  balancer-makemigartions:
    if: github.event_name == 'push'
    needs: balancer-push
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: test
      DB_NAME: test
      DB_USER: test
      DB_PASSWORD: test
      DB_HOST: test
      DB_PORT: test
    defaults:
      run:
        working-directory: ./balancer
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: make migrations
      run: |
       python -m pip install --upgrade pip
       pip install pipenv
       pipenv install
       pipenv run python manage.py makemigrations
       
    - name: push changes to git
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "generated migration scripts"
        file_pattern: balancer/services/migrations 
        
        

  #needs нужен для порядка и проверки что предыдущий степ выполнен (тип выполнение нового степа будет ток после того как степ из нидс хорошо отработает, 
  #если не отработает - новый степ не запустится ), а always нужен чтоб если даже из нидс степ не выполнен, 
  #то новый степ в любом случае выполнился (тип гарантирует, что новый степ всегда будет выполнен вне зависимости от других обстоятельств)
  balancer-test:
    needs: balancer-makemigartions
    if: ${{ always() }} &&
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: test
      TEST_MODE: "True"
    defaults:
      run:
        working-directory: ./balancer
    steps:
    - uses: actions/checkout@main
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install pip, pipenv and packages from Pipfile
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
    - name: Run tests
      run: |
        pipenv run test





  publish-to-dockerhub:
    runs-on: ubuntu-latest
    needs: balancer-test
    defaults:
      run:
        working-directory: ./balancer

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup version variable
        run: echo "version=$(cat VERSION)" > $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./balancer
          push: true
          tags: skoltech/speedtest-balancer:${{ env.version }}.${{ github.run_number }} #skoltech/speedtest-balancer:latest
